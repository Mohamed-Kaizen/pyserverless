[tool.poetry]
name = "serverless"
version = "0.1.0"
description = "A serverless server, that help you add serverless functions to your project."
authors = ["Mohamed-Kaizen <m.n.kaizen@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.96"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
orjson = "^3.9.0"
pillow = "^9.5.0"
email-validator = "^2.0.0"
python-multipart = "^0.0.6"
watchfiles = "^0.19.0"
tomlkit = "^0.11.8"
httpx = "^0.24.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.270"
mypy = "^1.3.0"
isort = "^5.12.0"
black = "^23.3.0"

[tool.isort]
profile="black"

[tool.ruff]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "B",   # bugbear
    "W",   # pycodestyle
    "I",   # isort
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "C90", # mccabe
    "ASYNC", # async checker
    "S",     # bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",   # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20", # flake8-print
    "PT",   # flake8-pytest-style
    "Q0",   # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # flake8-eradicate
    "PL",   # Pylint
    "PLC",  # Pylint-Convention
    "PLE",  # Pylint-Error
    "PLR",  # Pylint-Refactor
    "PLW",  # Pylint-Warn
    "TRY",  # tryceratops
    "FLY",  # flynt
    "RUF",  # ruffus
    "TCH"
]
show-fixes = true
line-length = 88


[tool.ruff.pydocstyle]
convention = "google"


[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
